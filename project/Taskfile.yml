---
version: "3"

vars:
  TASK_DOCKER_CE_IMAGE_NAME: "registry.gitlab.com/digital-commons/devsecops/tools/work-in-progress/proof-of-concept/the-devsecops-plugin"
  TASK_DOCKER_CE_DOCKERFILE: ".config/devcontainer/debian/Dockerfile"

tasks:
  plan:
    desc: Run project-specific plan tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project plan phase"
        silent: true
      - cmd: echo "âœ… Project Plan phase completed successfully"
        silent: true

  code:
    desc: Run project-specific code tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project code phase"
        silent: true
      - cmd: echo "âœ… Project Code phase completed successfully"
        silent: true

  build:
    desc: Run project-specific build tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project build phase"
        silent: true
      - task: :docker-ce:build
        vars:
          TASK_DOCKER_CE_IMAGE_NAME: "{{.TASK_DOCKER_CE_IMAGE_NAME}}"
          TASK_DOCKER_CE_DOCKERFILE: "{{.TASK_DOCKER_CE_DOCKERFILE}}"
          TASK_DOCKER_CE_IMAGE_TAG:
            sh: |
              if [ -f "VERSION" ]; then
                echo $(cat VERSION)
              fi
      - cmd: echo "âœ… Project Build phase completed successfully"
        silent: true

  test:
    desc: Run project-specific test tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project test phase"
        silent: true
      - task: test:tdd
      - cmd: echo "âœ… Project Test phase completed successfully"
        silent: true

  test:tdd:
    desc: Run project-specific TDD test tasks
    deps: [build]
    cmds:
      - cmd: echo "ðŸš€ Starting project TDD test phase"
        silent: true
      - task: :deploy
      - task: operate:kube:port-forward
      - task: :codeceptjs
      - cmd: echo "âœ… Project TDD test phase completed successfully"
        silent: true

  release:
    desc: Run project-specific release tasks
    deps:
      - task: build
        vars:
          TASK_DOCKER_CE_IMAGE_TAG:
            sh: |
              if [ -f "VERSION" ]; then
                echo $(cat VERSION)
              fi
    cmds:
      - cmd: echo "ðŸš€ Starting project release phase"
        silent: true
      - task: :docker-ce:push
        vars:
          TASK_DOCKER_CE_PUSH:
            sh: |
              if [ "{{.TASK_DEVSECOPS_RELEASE_CURRENT_BRANCH}}" = "{{.TASK_DEVSECOPS_RELEASE_DEFAULT_BRANCH}}" ]; then
                echo true
              else
                echo false
              fi
          TASK_DOCKER_CE_IMAGE_TAG:
            sh: |
              if [ -f "VERSION" ]; then
                echo $(cat VERSION)
              fi
          TASK_DOCKER_CE_IMAGE_NAME: "{{.TASK_DOCKER_CE_IMAGE_NAME}}"
      - cmd: echo "âœ… Project Release phase completed successfully"
        silent: true

  deploy:
    desc: Run project-specific deploy tasks
    deps: [build]
    cmds:
      - cmd: echo "ðŸš€ Starting project deploy phase"
        silent: true
      - task: :helm:dependency:update
      - cmd: |
          echo "ðŸš€ Create namespace..."
          kubectl --kubeconfig iac/environment/{{.ENV | default "testing"}}/kubeconfig.yaml create namespace superset --dry-run=client -o yaml | kubectl --kubeconfig iac/environment/{{.ENV | default "testing"}}/kubeconfig.yaml apply -f -
          kubectl --kubeconfig iac/environment/{{.ENV | default "testing"}}/kubeconfig.yaml create namespace testing --dry-run=client -o yaml | kubectl --kubeconfig iac/environment/{{.ENV | default "testing"}}/kubeconfig.yaml apply -f -
      - kubectl --kubeconfig iac/environment/{{.ENV | default "testing"}}/kubeconfig.yaml apply -f iac/environment/{{.ENV | default "testing"}}/sealed-secrets.yaml
      - cmd: |
          echo "ðŸš€ Deploying Apache Superset..."
          helm repo add superset https://apache.github.io/superset
          helm repo update
          helm upgrade --install superset superset/superset \
            --kubeconfig iac/environment/{{.ENV | default "testing"}}/kubeconfig.yaml \
            --namespace superset \
            --create-namespace \
            --values iac/environment/{{.ENV | default "testing"}}/superset-values.yaml \
            --wait \
            --timeout 15m \
            --debug
      - cmd: echo "âœ… Project Deploy phase completed successfully"
        silent: true

  operate:
    desc: Run project-specific operate tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project operate phase"
        silent: true
      - cmd: echo "âœ… Project Operate phase completed successfully"
        silent: true

  operate:kube:port-forward:
    desc: Port-forward the Superset service to localhost # DevSkim: ignore DS162092
    status:
      - 'curl --fail --max-time 2 http://localhost:8080 > /dev/null 2>&1' # DevSkim: ignore DS162092
    cmds:
      - cmd: echo "ðŸš€ Starting project port-forward phase"
        silent: true
      - task: :kubectl:port-forward
        vars:
          SERVICE_NAME: superset
          LOCAL_PORT: 8080
          REMOTE_PORT: 8088
          NAMESPACE: superset
      - cmd: echo "âœ… Project Port-forward phase completed successfully"
        silent: true

  monitor:
    desc: Run project-specific monitor tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project monitor phase"
        silent: true
      - cmd: echo "âœ… Project Monitor phase completed successfully"
        silent: true

  feedback:
    desc: Run project-specific feedback tasks
    cmds:
      - cmd: echo "ðŸš€ Starting project feedback phase"
        silent: true
      - cmd: echo "âœ… Project Feedback phase completed successfully"
        silent: true
