---
# Taskfile.yml: Central hub for development operations.
version: "3"

vars:
  # Environment variables for task control
  TASK_BUN_ENABLED: '{{.TASK_BUN_ENABLED | default "true"}}'
  TASK_COMMITIZEN_ENABLED: '{{.TASK_COMMITIZEN_ENABLED | default "true"}}'
  TASK_COMMITLINT_ENABLED: '{{.TASK_COMMITLINT_ENABLED | default "true"}}'
  TASK_DEV_ENABLED: '{{.TASK_DEV_ENABLED | default "true"}}'
  TASK_DOCKER_ENABLED: '{{.TASK_DOCKER_ENABLED | default "true"}}'
  TASK_LIZARD_ENABLED: '{{.TASK_LIZARD_ENABLED | default "true"}}'
  TASK_MEGALINTER_ENABLED: '{{.TASK_MEGALINTER_ENABLED | default "true"}}'
  TASK_NODEJS_ENABLED: '{{.TASK_NODEJS_ENABLED | default "true"}}'
  TASK_YAMLLINT_ENABLED: '{{.TASK_YAMLLINT_ENABLED | default "true"}}'

  # Simple separator
  TASK_SEPARATOR: '{{.TASK_SEPARATOR | default (print (repeat 120 "-") "\n" (repeat 120 "-") "\n" (repeat 120 "-"))}}'
  TASK_DEVSECOPS_ICON: '{{.TASK_DEVSECOPS_ICON | default "‚ôæÔ∏è"}}'


# Includes: Specify necessary and additional components for development.
# - Essential includes are required for a successful Docker build.
# - Optional includes extras like tests and lint (not needed for Docker builds)
includes:
  # Essential includes (Required for Docker build and k3s)

  # Optional includes (For dev, testing, linting, etc.)
  bun:
    taskfile: .config/bun/Taskfile.yml
    optional: true
  commitizen:
    taskfile: .config/commitizen/Taskfile.yml
    optional: true
  commitlint:
    taskfile: .config/commitlint/Taskfile.yml
    optional: true
  dev:
    taskfile: .config/dev/Taskfile.yml
    optional: true
  docker:
    taskfile: .config/docker/Taskfile.yml
    optional: true
  lizard:
    taskfile: .config/lizard/Taskfile.yml
    optional: true
  megalinter:
    taskfile: .config/megalinter/Taskfile.yml
    optional: true
  nodejs:
    taskfile: .config/nodejs/Taskfile.yml
    dir: .config/nodejs
    optional: true
  yamllint:
    taskfile: .config/yamllint/Taskfile.yml
    optional: true

tasks:
  default:
    # Orchestrates DevSecOps workflows.
    cmds:
      - task: plan
      - task: code
      - task: build
      - task: test
      - task: release
      - task: deploy
      - task: operate
      - task: monitor
      - task: feedback

  plan:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Plan"
        silent: true

  code:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Code"
        silent: true
      - cmd: |
          if [[ "{{.TASK_COMMITLINT_ENABLED}}" == "true" ]]; then
            echo "üîç Running commitlint..."
            task commitlint
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping commitlint (disabled via TASK_COMMITLINT_ENABLED=false)"
          fi
        silent: true
      - cmd: |
          if [[ "{{.TASK_COMMITIZEN_ENABLED}}" == "true" ]]; then
            echo "üîç Running commitizen checks..."
            task commitizen:check
            echo "{{.TASK_SEPARATOR}}"
            echo "üìù Running commitizen bump..."
            task commitizen:bump
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping commitizen (disabled via TASK_COMMITIZEN_ENABLED=false)"
          fi
        silent: true
      - cmd: |
          if [[ "{{.TASK_MEGALINTER_ENABLED}}" == "true" ]]; then
            echo "üîç Running megalinter..."
            task megalinter
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping megalinter (disabled via TASK_MEGALINTER_ENABLED=false)"
          fi
        silent: true
      - cmd: |
          if [[ "{{.TASK_LIZARD_ENABLED}}" == "true" ]]; then
            echo "üîç Running lizard code analysis..."
            task lizard
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping lizard (disabled via TASK_LIZARD_ENABLED=false)"
          fi
        silent: true

  build:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Build"
        silent: true
      - cmd: |
          if [[ "{{.TASK_DOCKER_ENABLED}}" == "true" ]]; then
            echo "üê≥ Building Docker images..."
            task docker:build:all:dockerfile
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping docker build (disabled via TASK_DOCKER_ENABLED=false)"
          fi
        silent: true

  test:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Test"
        silent: true
      - cmd: |
          if [[ "{{.TASK_DOCKER_ENABLED}}" == "true" ]]; then
            echo "üß™ Running Docker tests..."
            task docker:test
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping docker test (disabled via TASK_DOCKER_ENABLED=false)"
          fi
        silent: true

  release:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Release"
        silent: true
      - cmd: |
          if [[ "{{.TASK_COMMITIZEN_ENABLED}}" == "true" ]]; then
            echo "üì¶ Running commitizen bump for release..."
            CZ_BUMP_DRY_RUN="false" CZ_BUMP_YES="true" task commitizen:bump
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping commitizen bump (disabled via TASK_COMMITIZEN_ENABLED=false)"
          fi
        silent: true

  deploy:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Deploy"
        silent: true

  operate:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Operate"
        silent: true

  monitor:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Monitor"
        silent: true

  feedback:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Feedback"
        silent: true
