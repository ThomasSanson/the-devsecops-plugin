---
# Taskfile.yml: Central hub for development operations.
version: "3"

vars:
  # Environment variables for task control
  TASK_FLAGS: '{{.OVERRIDE_TASK_FLAGS | default ""}}'
  TASK_BUN_ENABLED: '{{.OVERRIDE_TASK_BUN_ENABLED | default "true"}}'
  TASK_COMMITIZEN_ENABLED: '{{.OVERRIDE_TASK_COMMITIZEN_ENABLED | default "true"}}'
  TASK_COMMITLINT_ENABLED: '{{.OVERRIDE_TASK_COMMITLINT_ENABLED | default "true"}}'
  TASK_COPIER_ENABLED: '{{.OVERRIDE_TASK_COPIER_ENABLED | default "true"}}'
  TASK_DEV_ENABLED: '{{.OVERRIDE_TASK_DEV_ENABLED | default "true"}}'
  TASK_DOCKER_CE_ENABLED: '{{.OVERRIDE_TASK_DOCKER_CE_ENABLED | default "true"}}'
  TASK_KANIKO_ENABLED: '{{.OVERRIDE_TASK_KANIKO_ENABLED | default "false"}}'
  TASK_LIZARD_ENABLED: '{{.OVERRIDE_TASK_LIZARD_ENABLED | default "true"}}'
  TASK_MEGALINTER_ENABLED: '{{.OVERRIDE_TASK_MEGALINTER_ENABLED | default "true"}}'
  TASK_NODEJS_ENABLED: '{{.OVERRIDE_TASK_NODEJS_ENABLED | default "true"}}'
  TASK_PODMAN_ENABLED: '{{.OVERRIDE_TASK_PODMAN_ENABLED | default "true"}}'
  TASK_YAMLLINT_ENABLED: '{{.OVERRIDE_TASK_YAMLLINT_ENABLED | default "true"}}'

  # DevSecOps variables
  TASK_DEVSECOPS_PLAN_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_PLAN_ENABLED | default "true"}}'
  TASK_DEVSECOPS_CODE_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_CODE_ENABLED | default "true"}}'
  TASK_DEVSECOPS_BUILD_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_BUILD_ENABLED | default "false"}}'
  TASK_DEVSECOPS_TEST_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_TEST_ENABLED | default "false"}}'
  TASK_DEVSECOPS_RELEASE_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_RELEASE_ENABLED | default "true"}}'
  TASK_DEVSECOPS_DEPLOY_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_DEPLOY_ENABLED | default "false"}}'
  TASK_DEVSECOPS_OPERATE_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_OPERATE_ENABLED | default "false"}}'
  TASK_DEVSECOPS_MONITOR_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_MONITOR_ENABLED | default "false"}}'
  TASK_DEVSECOPS_FEEDBACK_ENABLED: '{{.OVERRIDE_TASK_DEVSECOPS_FEEDBACK_ENABLED | default "true"}}'

  # Simple separator
  TASK_SEPARATOR: '{{.OVERRIDE_TASK_SEPARATOR | default (print (repeat 120 "-") "\n" (repeat 120 "-") "\n" (repeat 120 "-"))}}'
  TASK_DEVSECOPS_ICON: '{{.OVERRIDE_TASK_DEVSECOPS_ICON | default "‚ôæÔ∏è"}}'

# Includes: Specify necessary and additional components for development.
# - Essential includes are required for a successful Docker build.
# - Optional includes extras like tests and lint (not needed for Docker builds)
includes:
  # Essential includes (Required for Docker build and k3s)
  devsecops:plan:
    taskfile: .config/devsecops/Taskfile.plan.yml
  devsecops:code:
    taskfile: .config/devsecops/Taskfile.code.yml
  devsecops:build:
    taskfile: .config/devsecops/Taskfile.build.yml
  devsecops:test:
    taskfile: .config/devsecops/Taskfile.test.yml
  devsecops:release:
    taskfile: .config/devsecops/Taskfile.release.yml
  devsecops:deploy:
    taskfile: .config/devsecops/Taskfile.deploy.yml
  devsecops:operate:
    taskfile: .config/devsecops/Taskfile.operate.yml
  devsecops:monitor:
    taskfile: .config/devsecops/Taskfile.monitor.yml
  devsecops:feedback:
    taskfile: .config/devsecops/Taskfile.feedback.yml
  project:
    taskfile: src/Taskfile.yml

  # Optional includes (For dev, testing, linting, etc.)
  bun:
    taskfile: .config/bun/Taskfile.yml
    optional: true
  commitizen:
    taskfile: .config/commitizen/Taskfile.yml
    optional: true
  commitlint:
    taskfile: .config/commitlint/Taskfile.yml
    optional: true
  copier:
    taskfile: .config/copier/Taskfile.yml
    optional: true
  dev:
    taskfile: .config/dev/Taskfile.yml
    optional: true
  docker-ce:
    taskfile: .config/docker-ce/Taskfile.yml
    optional: true
  kaniko:
    taskfile: .config/kaniko/Taskfile.yml
    optional: true
  lizard:
    taskfile: .config/lizard/Taskfile.yml
    optional: true
  megalinter:
    taskfile: .config/megalinter/Taskfile.yml
    optional: true
  nodejs:
    taskfile: .config/nodejs/Taskfile.yml
    optional: true
  podman:
    taskfile: .config/podman/Taskfile.yml
    optional: true
  yamllint:
    taskfile: .config/yamllint/Taskfile.yml
    optional: true

tasks:
  default:
    # Orchestrates Test Driven Development workflows.
    cmds:
      - task: code
      - task: build
      - task: test
      - task: deploy

  devsecops:
    # Orchestrates DevSecOps workflows.
    cmds:
      - task: plan
      - task: code
      - task: build
      - task: test
      - task: release
      - task: deploy
      - task: operate
      - task: monitor
      - task: feedback

  plan:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Plan"
        silent: true
      - task: project:plan
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_PLAN_ENABLED | default "true"}}" == "true" ]]; then
            echo "üìã Running DevSecOps plan tasks..."
            task {{.TASK_FLAGS}} devsecops:plan
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps plan tasks (disabled via TASK_DEVSECOPS_PLAN_ENABLED=false)"
          fi
        silent: true

  code:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Code"
        silent: true
      - task: project:code
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_CODE_ENABLED | default "true"}}" == "true" ]]; then
            echo "üíª Running DevSecOps code tasks..."
            task {{.TASK_FLAGS}} devsecops:code
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps code tasks (disabled via TASK_DEVSECOPS_CODE_ENABLED=false)"
          fi
        silent: true

  build:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Build"
        silent: true
      - task: project:build
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_BUILD_ENABLED | default "true"}}" == "true" ]]; then
            echo "üî® Running DevSecOps build tasks..."
            task {{.TASK_FLAGS}} devsecops:build
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps build tasks (disabled via TASK_DEVSECOPS_BUILD_ENABLED=false)"
          fi
        silent: true

  test:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Test"
        silent: true
      - task: project:test
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_TEST_ENABLED | default "true"}}" == "true" ]]; then
            echo "üß™ Running DevSecOps test tasks..."
            task {{.TASK_FLAGS}} devsecops:test
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps test tasks (disabled via TASK_DEVSECOPS_TEST_ENABLED=false)"
          fi
        silent: true

  release:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Release"
        silent: true
      - task: project:release
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_RELEASE_ENABLED | default "true"}}" == "true" ]]; then
            echo "üì¶ Running DevSecOps release tasks..."
            task {{.TASK_FLAGS}} devsecops:release
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps release tasks (disabled via TASK_DEVSECOPS_RELEASE_ENABLED=false)"
          fi
        silent: true

  deploy:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Deploy"
        silent: true
      - task: project:deploy
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_DEPLOY_ENABLED | default "true"}}" == "true" ]]; then
            echo "üöÄ Running DevSecOps deploy tasks..."
            task {{.TASK_FLAGS}} devsecops:deploy
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps deploy tasks (disabled via TASK_DEVSECOPS_DEPLOY_ENABLED=false)"
          fi
        silent: true

  operate:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Operate"
        silent: true
      - task: project:operate
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_OPERATE_ENABLED | default "true"}}" == "true" ]]; then
            echo "‚öôÔ∏è Running DevSecOps operate tasks..."
            task {{.TASK_FLAGS}} devsecops:operate
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps operate tasks (disabled via TASK_DEVSECOPS_OPERATE_ENABLED=false)"
          fi
        silent: true

  monitor:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Monitor"
        silent: true
      - task: project:monitor
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_MONITOR_ENABLED | default "true"}}" == "true" ]]; then
            echo "üìä Running DevSecOps monitor tasks..."
            task {{.TASK_FLAGS}} devsecops:monitor
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps monitor tasks (disabled via TASK_DEVSECOPS_MONITOR_ENABLED=false)"
          fi
        silent: true

  feedback:
    cmds:
      - cmd: echo "{{.TASK_DEVSECOPS_ICON}} Feedback"
        silent: true
      - task: project:feedback
      - cmd: |
          if [[ "{{.TASK_DEVSECOPS_FEEDBACK_ENABLED | default "true"}}" == "true" ]]; then
            echo "üí≠ Running DevSecOps feedback tasks..."
            task {{.TASK_FLAGS}} devsecops:feedback
            echo "{{.TASK_SEPARATOR}}"
          else
            echo "‚ö†Ô∏è Skipping DevSecOps feedback tasks (disabled via TASK_DEVSECOPS_FEEDBACK_ENABLED=false)"
          fi
        silent: true
