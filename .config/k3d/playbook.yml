---
- name: Install k3d using Go
  hosts: localhost # DevSkim: ignore DS162092 # Debug context restricted to development environments
  connection: local
  gather_facts: true

  vars:
    k3d_version: "{{ k3d_version | default('v5.8.3') }}"
    go_bin_path: "{{ ansible_env.HOME }}/go/bin"
    local_bin_path: "{{ ansible_env.HOME }}/.local/bin"

  tasks:
    - name: Check if Go is installed
      ansible.builtin.command: "/usr/local/go/bin/go version"
      register: go_check
      changed_when: false
      # rc=127 is expected if the command is not found (Go not installed)
      failed_when: go_check.rc != 0 and go_check.rc != 127

    - name: Fail if Go is not installed
      ansible.builtin.fail:
        msg: "Go is required but not installed. Please install Go before running this playbook."
      when: go_check.rc != 0

    - name: Ensure GOPATH/bin directory exists
      ansible.builtin.file:
        path: "{{ go_bin_path }}"
        state: directory
        mode: "0755"

    - name: Ensure ~/.local/bin directory exists
      ansible.builtin.file:
        path: "{{ local_bin_path }}"
        state: directory
        mode: "0755"

    - name: Install k3d using Go install
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ go_bin_path }}"
        GOPATH: "{{ ansible_env.HOME }}/go"
      ansible.builtin.shell: |
        /usr/local/go/bin/go install github.com/k3d-io/k3d/v5@{{ k3d_version }}
      args:
        creates: "{{ go_bin_path }}/k3d"
        executable: /bin/bash

    - name: Create symlink to k3d in ~/.local/bin for user access
      ansible.builtin.file:
        src: "{{ go_bin_path }}/k3d"
        dest: "{{ local_bin_path }}/k3d"
        state: link
        mode: "0755"
      register: symlink_result
      failed_when: symlink_result.failed and not ansible_check_mode

    - name: Alternative - Copy k3d to ~/.local/bin if symlink fails
      ansible.builtin.copy:
        src: "{{ go_bin_path }}/k3d"
        dest: "{{ local_bin_path }}/k3d"
        mode: "0755"
        remote_src: true
      register: copy_result
      failed_when: copy_result.failed and not ansible_check_mode
      when: symlink_result.failed and not ansible_check_mode

    - name: Verify k3d installation in GOPATH
      ansible.builtin.command: "{{ go_bin_path }}/k3d version"
      register: k3d_version_check
      changed_when: false

    - name: Verify k3d is accessible globally
      ansible.builtin.command: "which k3d"
      register: k3d_which_check
      changed_when: false
      # rc=1 is expected if the command cannot find k3d
      failed_when: k3d_which_check.rc > 1

    - name: Display k3d path
      ansible.builtin.debug:
        msg: "k3d is available at: {{ k3d_which_check.stdout }}"
      when: k3d_which_check.rc == 0

    - name: Display installation result
      ansible.builtin.debug:
        msg: "k3d {{ k3d_version }} has been successfully installed and made available through {{ local_bin_path }}/k3d"
      when: k3d_version_check.rc == 0
