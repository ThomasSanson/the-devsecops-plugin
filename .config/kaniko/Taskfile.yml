---
version: "3"

vars:
  # Core settings
  TASK_KANIKO_EXECUTOR: '{{.OVERRIDE_TASK_KANIKO_EXECUTOR | default "gcr.io/kaniko-project/executor:latest"}}'
  TASK_KANIKO_WARMER: '{{.OVERRIDE_TASK_KANIKO_WARMER | default "gcr.io/kaniko-project/warmer:latest"}}'
  TASK_KANIKO_RUNTIME_CMD: '{{.OVERRIDE_TASK_KANIKO_RUNTIME_CMD | default "docker container run"}}'
  TASK_KANIKO_VOLUME_FLAG: '{{.OVERRIDE_TASK_KANIKO_VOLUME_FLAG | default "-v"}}'  # -v, --volume, --mount, etc.

  # Authentication settings
  TASK_KANIKO_AUTH_ENABLED: '{{.OVERRIDE_TASK_KANIKO_AUTH_ENABLED | default "false"}}'
  TASK_KANIKO_REGISTRY_USERNAME: '{{.OVERRIDE_TASK_KANIKO_REGISTRY_USERNAME | default ""}}'
  TASK_KANIKO_REGISTRY_PASSWORD: '{{.OVERRIDE_TASK_KANIKO_REGISTRY_PASSWORD | default ""}}'
  TASK_KANIKO_REGISTRY_URL: '{{.OVERRIDE_TASK_KANIKO_REGISTRY_URL | default ""}}'

  # Build settings
  TASK_KANIKO_IMAGE_NAME: '{{.OVERRIDE_TASK_KANIKO_IMAGE_NAME | default "test"}}'
  TASK_KANIKO_IMAGE_TAG: '{{.OVERRIDE_TASK_KANIKO_IMAGE_TAG | default "latest"}}'
  TASK_KANIKO_DOCKERFILE: '{{.OVERRIDE_TASK_KANIKO_DOCKERFILE | default ".config/devcontainer/debian/Dockerfile"}}'
  TASK_KANIKO_CONTEXT: '{{.OVERRIDE_TASK_KANIKO_CONTEXT | default "."}}'
  TASK_KANIKO_PUSH: '{{.OVERRIDE_TASK_KANIKO_PUSH | default "false"}}'

  # Cache settings
  TASK_KANIKO_CACHE_ENABLED: '{{.OVERRIDE_TASK_KANIKO_CACHE_ENABLED | default "true"}}'
  TASK_KANIKO_CACHE_REPO: '{{.OVERRIDE_TASK_KANIKO_CACHE_REPO | default "oci:$HOME/tmp/cache"}}'
  TASK_KANIKO_CACHE_TTL: '{{.OVERRIDE_TASK_KANIKO_CACHE_TTL | default "24h"}}'

  # Labels (optional)
  TASK_KANIKO_CUSTOM_LABELS: '{{.OVERRIDE_TASK_KANIKO_CUSTOM_LABELS | default ""}}'
  TASK_KANIKO_BASE_LABELS: >
    --label org.opencontainers.image.created={{now | date "2006-01-02T15:04:05Z07:00"}}
    --label org.opencontainers.image.source={{.REPO_URL | default "local"}}
    --label org.opencontainers.image.version={{.TASK_KANIKO_IMAGE_TAG}}

tasks:
  default:
    desc: |
      Build a container image with Kaniko using a two-step process:
      1. Create secret.json if authentication is enabled
      2. Build local Kaniko image
      3. Use the local image to build the final container

      Variables:
        TASK_KANIKO_IMAGE_NAME: Name for the built image (default: test)
        TASK_KANIKO_IMAGE_TAG: Tag for the built image (default: latest)
        TASK_KANIKO_DOCKERFILE: Path to Dockerfile (default: .config/devcontainer/debian/Dockerfile)
        TASK_KANIKO_CUSTOM_LABELS: Additional custom labels (format: key=value,key2=value2)
        TASK_KANIKO_PUSH: Push the image to registry (default: false)
        TASK_KANIKO_AUTH_ENABLED: Enable registry authentication (default: false)
    cmds:
      - |
        if [ "{{.TASK_KANIKO_AUTH_ENABLED}}" = "true" ]; then
          echo "Creating secret.json for authentication..."
          echo '{
            "auths": {
              "{{.TASK_KANIKO_REGISTRY_URL}}": {
                "username": "{{.TASK_KANIKO_REGISTRY_USERNAME}}",
                "password": "{{.TASK_KANIKO_REGISTRY_PASSWORD}}"
              }
            }
          }' > .config/kaniko/secret.json
        else
          echo "" > .config/kaniko/secret.json
        fi

      - |
        echo "Building local Kaniko image..."
        docker build -t local-kaniko:latest -f .config/kaniko/Dockerfile .

      - |
        echo "Using local Kaniko image to build final container..."
        KANIKO_ARGS=""
        if [ "{{.TASK_KANIKO_CACHE_ENABLED}}" = "true" ]; then
          KANIKO_ARGS="$KANIKO_ARGS --cache=true --cache-repo={{.TASK_KANIKO_CACHE_REPO}} --cache-ttl={{.TASK_KANIKO_CACHE_TTL}}"
        fi

        if [ -n "{{.TASK_KANIKO_CUSTOM_LABELS}}" ]; then
          KANIKO_ARGS="$KANIKO_ARGS {{.TASK_KANIKO_BASE_LABELS}} {{.TASK_KANIKO_CUSTOM_LABELS}}"
        fi

        if [ "{{.TASK_KANIKO_PUSH}}" = "true" ]; then
          DESTINATION_FLAG="--destination={{.TASK_KANIKO_IMAGE_NAME}}:{{.TASK_KANIKO_IMAGE_TAG}}"
        else
          DESTINATION_FLAG="--no-push"
        fi

        {{.TASK_KANIKO_RUNTIME_CMD}} \
          --rm \
          {{.TASK_KANIKO_VOLUME_FLAG}} "$(pwd):/workspace" \
          local-kaniko:latest \
          --dockerfile=/workspace/{{.TASK_KANIKO_DOCKERFILE}} \
          --context=/workspace \
          $DESTINATION_FLAG \
          $KANIKO_ARGS

      - rm -f .config/kaniko/secret.json

  warmup:
    desc: |
      Warm up Kaniko cache with base images

      Variables:
        TASK_KANIKO_CACHE_REPO: Cache repository path (default: oci:~/tmp/cache)
        TASK_KANIKO_CACHE_TTL: Cache time-to-live (default: 24h)
    cmds:
      - |
        # Create cache directory if it doesn't exist
        mkdir -p $(echo "{{.TASK_KANIKO_CACHE_REPO}}" | sed 's/^oci://')

        # Pull and cache base images
        {{.TASK_KANIKO_RUNTIME_CMD}} \
          {{.TASK_KANIKO_VOLUME_FLAG}} $(echo "{{.TASK_KANIKO_CACHE_REPO}}" | sed 's/^oci://'):/cache \
          {{.TASK_KANIKO_WARMER}} \
          --cache-repo={{.TASK_KANIKO_CACHE_REPO}} \
          --image=debian:12
