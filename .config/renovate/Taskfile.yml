---
version: "3"

vars:
  TASK_RENOVATE_ENABLED: '{{.TASK_RENOVATE_ENABLED | default "true"}}'
  TASK_RENOVATE_CONFIG: '{{.TASK_RENOVATE_CONFIG | default ".config/renovate/config.json"}}'
  TASK_RENOVATE_REPOSITORY: '{{.TASK_RENOVATE_REPOSITORY | default "."}}'
  TASK_RENOVATE_LOG_LEVEL: '{{.TASK_RENOVATE_LOG_LEVEL | default "info"}}'
  TASK_RENOVATE_PLATFORM: '{{.TASK_RENOVATE_PLATFORM | default "gitlab"}}'
  TASK_RENOVATE_ENDPOINT: '{{.TASK_RENOVATE_ENDPOINT | default ""}}'
  TASK_RENOVATE_CLI_OPTS: '{{.TASK_RENOVATE_CLI_OPTS | default ""}}'
  TASK_RENOVATE_DRY_RUN: '{{.TASK_RENOVATE_DRY_RUN | default "false"}}'

tasks:
  default:
    desc: Run Renovate with configurable options
    deps: [check]
    status:
      - test "{{.TASK_RENOVATE_ENABLED}}" != "true" || test -z "$RENOVATE_TOKEN"
    vars:
      TASK_RENOVATE_CMD:
        sh: |
          PLATFORM_ARG=""
          if [ -n "{{.TASK_RENOVATE_PLATFORM}}" ]; then PLATFORM_ARG="--platform={{.TASK_RENOVATE_PLATFORM}}"; fi
          DRY_RUN_ARG=""
          case "{{.TASK_RENOVATE_DRY_RUN}}" in
            ""|"false") DRY_RUN_ARG="" ;;
            "true"|"full") DRY_RUN_ARG="--dry-run=full" ;;
            "lookup"|"extract") DRY_RUN_ARG="--dry-run={{.TASK_RENOVATE_DRY_RUN}}" ;;
            *) DRY_RUN_ARG="--dry-run={{.TASK_RENOVATE_DRY_RUN}}" ;;
          esac
          REPO_ARG=""
          if [ "{{.TASK_RENOVATE_PLATFORM}}" != "local" ] && [ -n "{{.TASK_RENOVATE_REPOSITORY}}" ]; then REPO_ARG="{{.TASK_RENOVATE_REPOSITORY}}"; fi
          ENV_PREFIX="LOG_LEVEL=\"{{.TASK_RENOVATE_LOG_LEVEL}}\" RENOVATE_CONFIG_FILE=\"{{.TASK_RENOVATE_CONFIG}}\" RENOVATE_TOKEN=\"$RENOVATE_TOKEN\""
          if [ -n "{{.TASK_RENOVATE_ENDPOINT}}" ]; then ENV_PREFIX="RENOVATE_ENDPOINT=\"{{.TASK_RENOVATE_ENDPOINT}}\" $ENV_PREFIX"; fi
          echo "$ENV_PREFIX npx --yes renovate $DRY_RUN_ARG $PLATFORM_ARG {{.TASK_RENOVATE_CLI_OPTS}} $REPO_ARG {{.CLI_ARGS}}"
    cmds:
      - cmd: '{{.TASK_RENOVATE_CMD}}'

  check:
    desc: Verify prerequisites for npx usage
    preconditions:
      - sh: command -v npx >/dev/null 2>&1
        msg: "‚ùå Missing prerequisite: please install Node.js/npm to use npx."

  validate:
    desc: Validate the Renovate configuration file
    cmds:
      - task: default
        vars:
          TASK_RENOVATE_CMD: 'LOG_LEVEL="{{.TASK_RENOVATE_LOG_LEVEL}}" npx --yes -p renovate renovate-config-validator "{{.TASK_RENOVATE_CONFIG}}"'

  dry-run:
    desc: Local dry-run of Renovate with the provided configuration
    cmds:
      - task: default
        vars:
          TASK_RENOVATE_PLATFORM: "local"
          CLI_ARGS: "{{.CLI_ARGS}}"
