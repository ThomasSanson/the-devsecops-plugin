---
- name: Install Kind using Go
  hosts: localhost # DevSkim: ignore DS162092 # Debug context restricted to development environments
  connection: local
  gather_facts: true

  vars:
    kind_version: "{{ kind_version | default('v0.26.0') }}"
    go_bin_path: "{{ ansible_env.HOME }}/go/bin"

  tasks:
    - name: Check if Go is installed
      ansible.builtin.command: "/usr/local/go/bin/go version"
      register: go_check
      ignore_errors: true
      changed_when: false
      failed_when: false

    - name: Fail if Go is not installed
      ansible.builtin.fail:
        msg: "Go is required but not installed. Please install Go before running this playbook."
      when: go_check.rc != 0

    - name: Ensure GOPATH/bin directory exists
      ansible.builtin.file:
        path: "{{ go_bin_path }}"
        state: directory
        mode: '0755'

    - name: Install Kind using Go install
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ go_bin_path }}"
        GOPATH: "{{ ansible_env.HOME }}/go"
      ansible.builtin.shell: |
        /usr/local/go/bin/go install sigs.k8s.io/kind@{{ kind_version }}
      args:
        creates: "{{ go_bin_path }}/kind"
        executable: /bin/bash

    - name: Create symlink to kind in /usr/local/bin for global access
      ansible.builtin.file:
        src: "{{ go_bin_path }}/kind"
        dest: "/usr/local/bin/kind"
        state: link
        mode: '0755'
      become: true
      ignore_errors: true

    - name: Alternative - Copy kind to /usr/local/bin if symlink fails (permissions issue)
      ansible.builtin.copy:
        src: "{{ go_bin_path }}/kind"
        dest: "/usr/local/bin/kind"
        mode: '0755'
        remote_src: true
      become: true
      ignore_errors: true
      when: not ansible_check_mode

    - name: Verify Kind installation in GOPATH
      ansible.builtin.command: "{{ go_bin_path }}/kind version"
      register: kind_version_check
      changed_when: false

    - name: Verify Kind is accessible globally
      ansible.builtin.command: "which kind"
      register: kind_which_check
      changed_when: false
      ignore_errors: true

    - name: Display Kind path
      ansible.builtin.debug:
        msg: "Kind is available at: {{ kind_which_check.stdout }}"
      when: kind_which_check.rc == 0

    - name: Display installation result
      ansible.builtin.debug:
        msg: "Kind {{ kind_version }} has been successfully installed and made available globally through /usr/local/bin/kind"
      when: kind_version_check.rc == 0
