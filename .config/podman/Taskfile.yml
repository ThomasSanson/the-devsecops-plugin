---
version: "3"

vars:
  VENV_DIR: '{{.OVERRIDE_VENV_DIR | default "./venv/podman"}}'
  ANSIBLE_CMD: '{{.OVERRIDE_ANSIBLE_CMD | default "./venv/podman/bin/ansible-playbook"}}'
  GALAXY_CMD: '{{.OVERRIDE_GALAXY_CMD | default "./venv/podman/bin/ansible-galaxy"}}'
  REQUIREMENTS_FILE: '{{.OVERRIDE_REQUIREMENTS_FILE | default ".config/podman/requirements.txt"}}'
  ROLES_REQUIREMENTS: '{{.OVERRIDE_ROLES_REQUIREMENTS | default ".config/podman/requirements.yml"}}'
  PLAYBOOK_FILE: '{{.OVERRIDE_PLAYBOOK_FILE | default ".config/podman/playbook.yml"}}'
  PYTHON_VERSION_FILE: '{{.OVERRIDE_PYTHON_VERSION_FILE | default ".config/python/.python-version"}}'
  INVENTORY_TARGET: "localhost" # DevSkim: ignore DS162092

env:
  LANG: "C.UTF-8"
  LC_ALL: "C.UTF-8"
  LANGUAGE: "C.UTF-8"
  ANSIBLE_ROLES_PATH: ".config/podman/roles"

tasks:
  install-dependencies:
    desc: |
      ‚ÑπÔ∏è Description:
        Sets up Ansible and its dependencies in a dedicated virtual environment

      üîß Variables:
        - VENV_DIR: Virtual environment location
        - REQUIREMENTS_FILE: Dependencies file path

      üîê Preconditions:
        - Python 3.x must be installed
        - Internet connectivity required

      üîÑ Execution:
        Creates virtualenv and installs required packages
    deps: [cleanup]
    preconditions:
      - sh: "command -v python3 >/dev/null 2>&1"
        msg: "‚ùå Python 3 is not installed"
      - sh: "test -f {{.PYTHON_VERSION_FILE}}"
        msg: "‚ùå Python version file not found at {{.PYTHON_VERSION_FILE}}"
      - sh: "test -f {{.REQUIREMENTS_FILE}}"
        msg: "‚ùå Requirements file not found at {{.REQUIREMENTS_FILE}}"
    cmds:
      - defer: { task: cleanup }
      - python3 -m venv {{.VENV_DIR}}
      - "{{.VENV_DIR}}/bin/pip install -r {{.REQUIREMENTS_FILE}}"
      - cmd: echo "‚úÖ Dependencies installed successfully"
        silent: true

  install-roles:
    desc: |
      ‚ÑπÔ∏è Description:
        Installs required Ansible roles

      üîß Variables:
        - GALAXY_CMD: Ansible Galaxy command path
        - ROLES_REQUIREMENTS: Roles requirements file path

      üîê Preconditions:
        - Dependencies must be installed

      üîÑ Execution:
        Installs required Ansible roles
    deps: [install-dependencies]
    preconditions:
      - sh: "test -f {{.ROLES_REQUIREMENTS}}"
        msg: "‚ùå Roles requirements file not found at {{.ROLES_REQUIREMENTS}}"
    cmds:
      - mkdir -p .config/podman/roles
      - "{{.GALAXY_CMD}} install -r {{.ROLES_REQUIREMENTS}}"
      - cmd: echo "‚úÖ Ansible roles installed successfully"
        silent: true

  install:
    desc: |
      ‚ÑπÔ∏è Description:
        Installs Podman using Ansible automation

      üîß Variables:
        - ANSIBLE_CMD: Ansible command path
        - PLAYBOOK_FILE: Ansible playbook location

      üîê Preconditions:
        - Dependencies must be installed
        - Roles must be installed
        - Root/sudo privileges required

      üîÑ Execution:
        Runs Ansible playbook for Podman installation
    deps: [install-roles]
    preconditions:
      - sh: "[[ $EUID -eq 0 ]] || sudo -n true"
        msg: "‚ùå Root privileges or sudo access required"
      - sh: "test -f {{.PLAYBOOK_FILE}}"
        msg: "‚ùå Playbook file not found at {{.PLAYBOOK_FILE}}"
    cmds:
      - defer: { task: cleanup }
      - |
        {{.ANSIBLE_CMD}} \
          -i {{.INVENTORY_TARGET}}, \
          -c local \
          {{.PLAYBOOK_FILE}} \
          -e 'ansible_python_interpreter=/usr/bin/python3'
      - cmd: echo "‚úÖ Podman installed successfully"
        silent: true

  cleanup:
    desc: |
      ‚ÑπÔ∏è Description:
        Performs cleanup of temporary files and failed installations

      üîß Variables:
        - VENV_DIR: Virtual environment to clean

      üîê Preconditions: None

      üîÑ Execution:
        Removes temporary files and partial installations
    internal: true
    cmds:
      - rm -rf {{.VENV_DIR}}/*.tmp
      - rm -rf {{.VENV_DIR}}/*.log
      - cmd: echo "‚úÖ Cleanup completed"
        silent: true
